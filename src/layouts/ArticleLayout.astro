---
import BaseLayout from "./BaseLayout.astro";
import FontAwesomeArrow from "../components/FontAwesomeArrow.astro";
import formatDate from "../scripts/format-date";
import { Image } from "astro:assets";
import TagCard from "../components/TagCard.astro";
import type { CollectionEntry } from "astro:content";

type Props = CollectionEntry<"blog">["data"];

const { title, author, pubDate, image, tags } = Astro.props;
const { slug } = Astro.params;

const formatted = formatDate(pubDate);
---

<style>
  .image-wrapper {
    width: 100%;
  }

  .image-wrapper > img {
    border-radius: 2em;
    object-fit: cover;
    width: 100%;
    height: 100%;
  }

  .tags-container {
    padding: 2em;
    border-radius: 0.5em;
    display: flex;
    flex-wrap: wrap;
    border: 1px solid var(--secondary);
    justify-content: center;
    gap: 2em;
  }

  .author span {
    font-weight: 900;
    color: var(--primary);
  }

  .nav-back {
    position: relative;
    text-decoration: none;
    color: inherit;
    display: flex;
    align-items: center;
    gap: 0.35em;
    width: max-content;
  }

  .nav-back::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: var(--primary);
    scale: 0 1;
    transition: scale 250ms ease;
  }

  .nav-back:hover::after {
    scale: 1 1;
  }
</style>
<BaseLayout pageTitle={title}>
  <a href="/blog" class="nav-back">
    <FontAwesomeArrow height="1.5em" />Back to blog
  </a>
  <p>{formatted}</p>

  {
    image && (
      <>
        <div class="image-wrapper">
          <Image
            transition:name={slug}
            src={image.url}
            alt={image.alt}
            width="1920"
            height="1080"
            format="png"
          />
        </div>
        <p class="author">
          Photo credit: <span>{image.credit}</span>
        </p>
      </>
    )
  }

  <p class="author">
    Written by <span>{author}</span>
  </p>
  <slot />
  <h2>Tags</h2>
  <div class="tags-container">
    {
      tags &&
        tags.map((tag) => {
          return <TagCard tag={tag} />;
        })
    }
  </div>
</BaseLayout>
